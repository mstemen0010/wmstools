package com.wms.jdbtk3;import javax.swing.table.AbstractTableModel;import javax.swing.table.TableModel;import javax.swing.event.TableModelListener;import javax.swing.event.TableModelEvent;public class VTableModel extends AbstractTableModel implements		TableModelListener {	protected TableModel model;	protected VTable table;	public VTableModel(VTable v_table) {		this.table = v_table;		model = this;	}	public TableModel getModel() {		return model;	}	public void setModel(TableModel model) {		this.model = model;		model.addTableModelListener(this);	}	// By default, implement TableModel by forwarding all messages	// to the model.	public Object getValueAt(int aRow, int aColumn) {		return table.getValueAt(aRow, aColumn);	}	public void setValueAt(Object aValue, int aRow, int aColumn) {		table.setValueAt((String) aValue, aRow, aColumn);	}	public int getRowCount() {		return (table == null) ? 0 : table.getRowCount();	}	public int getColumnCount() {		return (table == null) ? 0 : table.getColumnCount();	}	public String getColumnName(int aColumn) {		return table.getColumnName(aColumn);	}	public Class getColumnClass(int aColumn) {		return table.getColumnClass(aColumn);	}	public boolean isCellEditable(int row, int column) {		return table.isCellEditable(row, column);	}	//	// Implementation of the TableModelListener interface,	//	// By default forward all events to all the listeners.	public void tableChanged(TableModelEvent e) {		fireTableChanged(e);	}}