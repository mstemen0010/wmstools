/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * memoryMonitor.java
 *
 * Created on Jun 19, 2009, 8:10:38 PM
 */

package com.wintermute.util.gui;

/**
 *
 * @author mstemen
 */

public class memoryMonitor extends javax.swing.JFrame {

    private DecimalFormat memFormatMb = new DecimalFormat(" ####.## Mb");
    private DecimalFormat memFormatKb = new DecimalFormat(" #### Kb");

    /** Creates new form memoryMonitor */
    public memoryMonitor() {
        initComponents();
    }

    public void showMemProgress( int percent ) {
        if( percent >= 75 )
            memProgress.setForeground( Color.GREEN );
        else if( percent < 75 && percent >= 60 )
            memProgress.setForeground( Color.GREEN.darker() );
        else if( percent < 60 && percent >= 45 )
            memProgress.setForeground( Color.YELLOW );
        else if( percent < 45 && percent >= 25 )
            memProgress.setForeground( Color.ORANGE.darker() );
        else if( percent < 25 && percent > 15 )
            memProgress.setForeground( Color.ORANGE );
        else
            memProgress.setForeground( Color.RED );
        memProgress.setValue( percent );
        memProgress.setString( String.valueOf(percent) + "%");
    }

    public void showFreeMem( String value ) {
        freeMem.setText( value );
    }
    
    public void showMaxMem( String value ) {
        maxMem.setText( value );
    }
    
    public void showDeltaMem( String value, boolean more ) {
        deltaMem.setText( value );
        if( more ) {
            deltaMem.setForeground( Color.GREEN );
            deltaMem.setBackground( Color.BLACK );
        } else {
            deltaMem.setForeground( Color.RED );
            deltaMem.setBackground( Color.WHITE);
        }
    }

    public void statMemory() {
        
        double currentFree = 0.00D;
        double diffFree = 0.00D;
        double maxMem = Runtime.getRuntime().maxMemory() /1048576.00D;
        
        /// System.gc();
        double usedMem = ( Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory() );
        currentFree = ( Runtime.getRuntime().maxMemory() - usedMem )/1048576.00D;
        diffFree = Math.abs( lastFreeMem - currentFree );
        String freeMemStr = null;
        int percent = (int) ((currentFree/ maxMem ) * 100 );
        if( currentFree < 1 )
            freeMemStr = memFormatKb.format( currentFree * 1024 );
        else
            freeMemStr = memFormatMb.format( currentFree );
        String deltaMemStr = null;
        
        if( diffFree < 1 )
            deltaMemStr = memFormatKb.format( diffFree * 1024 );
        else
            deltaMemStr = memFormatMb.format( diffFree );
        
        /*
        StringBuilder sb = new StringBuilder("GC #");
        sb.append( ++gcCount ).append( " free memory: ").append( Runtime.getRuntime().freeMemory()/1048576.00 );
        sb.append( "Mb total available to ParallaxMgr: ").append((double)Runtime.getRuntime().maxMemory()/1048576.00 );
        if( currentFree > lastFreeMem )
            sb.append( "Mb change is: +" ).append( (double)diffFree/1048576.00 ).append( "Mb");
        else
            sb.append( "Mb change is: -" ).append( (double)diffFree/1048576.00 ).append( "Mb");
         */
        configMgr.showFreeMem( freeMemStr );
        if( currentFree > lastFreeMem ) {
            configMgr.showDeltaMem( String.valueOf( deltaMemStr ), true );
        } else {
            configMgr.showDeltaMem( String.valueOf( deltaMemStr ), false );
        }
        configMgr.showMemProgress( percent );
        lastFreeMem = currentFree;
        // sendStatusMessage( sb.toString() );
    }

    private void memProgressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_memProgressMouseClicked
        System.gc();
        ParallaxMgr.statMemory();
    }//GEN-LAST:event_memProgressMouseClicked
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

    	memPanel = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        freeMem = new javax.swing.JFormattedTextField();
        jLabel67 = new javax.swing.JLabel();
        maxMem = new javax.swing.JFormattedTextField();
        jLabel68 = new javax.swing.JLabel();
        deltaMem = new javax.swing.JFormattedTextField();
        memProgress = new javax.swing.JProgressBar();

        memPanel.setLayout(new java.awt.GridBagLayout());
        memPanel.setMinimumSize(new java.awt.Dimension(175, 28));
        memPanel.setPreferredSize(new java.awt.Dimension(550, 28));
        jLabel66.setFont(new java.awt.Font("Trebuchet MS", 1, 11));
        jLabel66.setLabelFor(freeMem);
        jLabel66.setText("Available:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        memPanel.add(jLabel66, gridBagConstraints);
        jLabel66.getAccessibleContext().setAccessibleName("free:");

        freeMem.setText("0.0");
        freeMem.setFont(new java.awt.Font("Trebuchet MS", 0, 11));
        freeMem.setPreferredSize(new java.awt.Dimension(65, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        memPanel.add(freeMem, gridBagConstraints);

        jLabel67.setFont(new java.awt.Font("Trebuchet MS", 1, 11));
        jLabel67.setLabelFor(maxMem);
        jLabel67.setText("Max:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        memPanel.add(jLabel67, gridBagConstraints);

        maxMem.setText("0.0");
        maxMem.setFont(new java.awt.Font("Trebuchet MS", 0, 11));
        maxMem.setPreferredSize(new java.awt.Dimension(65, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        memPanel.add(maxMem, gridBagConstraints);

        jLabel68.setFont(new java.awt.Font("Trebuchet MS", 1, 11));
        jLabel68.setLabelFor(deltaMem);
        jLabel68.setText("Change:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 5);
        memPanel.add(jLabel68, gridBagConstraints);

        deltaMem.setBackground(new java.awt.Color(0, 0, 0));
        deltaMem.setText("0.0");
        deltaMem.setFont(new java.awt.Font("Trebuchet MS", 1, 11));
        deltaMem.setPreferredSize(new java.awt.Dimension(65, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        memPanel.add(deltaMem, gridBagConstraints);

        memProgress.setBackground(new java.awt.Color(0, 0, 0));
        memProgress.setForeground(new java.awt.Color(0, 255, 102));
        memProgress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                memProgressMouseClicked(evt);
            }
        });

        memPanel.add(memProgress, new java.awt.GridBagConstraints());


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new memoryMonitor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    java.awt.GridBagConstraints gridBagConstraints;
    private javax.swing.JPanel memPanel;
    private javax.swing.JProgressBar memProgress;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JFormattedTextField maxMem;
    private javax.swing.JFormattedTextField deltaMem;
    private javax.swing.JFormattedTextField freeMem;
    private double lastFreeMem = 0;
}
