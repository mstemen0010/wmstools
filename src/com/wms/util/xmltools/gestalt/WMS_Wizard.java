/*
 * GES_Wizard.java
 *
 * Created on May 22, 2006, 11:35 PM
 */

package com.wms.util.xmltools.gestalt;

import com.wms.util.xmltools.gestalt.WMSSpellBook;
import javax.swing.*;
import java.util.HashMap;
/**
 *
 * @author  Matt
 */
public class WMS_Wizard extends javax.swing.JPanel  implements WMSSpellCauldronInterface {
    
    private WMSSpellBook.GESSpellBookType spellBookType = WMSSpellBook.GESSpellBookType.NONE;
    private WMSSpellCauldron cauldron;
    private HashMap<String, WMSSpellBook>spellBooks = new HashMap<String, WMSSpellBook>();
    private String currentSpellBookKey = null;
    
    /** Creates new form GES_Wizard */
    public WMS_Wizard() {
        initComponents();
        cauldron = new WMSSpellCauldron();
    }   
    
    /**
     * Creates a new instance of ParallaxWizardObject 
     */
    public WMS_Wizard( WMSSpellBook.GESSpellBookType spellBookType )
    {
        initComponents();
        cauldron = new WMSSpellCauldron();
        this.spellBookType = spellBookType;        
    }        
    

    public void addSpellBook( WMSSpellBook spellBook )
    {
        spellBooks.put( spellBook.getKey(), spellBook );
        currentSpellBookKey = spellBook.getKey();
    }
    public void add( String key, String value )
    {
        cauldron.add( key, value );
    }
    
    public void add( JPanel panel )
    {
        if( panel != null )
        {
            mainPanel.add( panel );
        }
    }
    public void setScriptType( WMSSpellBook.GESSpellBookType newType )
    {
        this.spellBookType = newType;        
    }
    
    public void jumpToPage( String key, WMSSpellBookPage newPage )
    {
        spellBooks.get(key).jump(newPage);
    }
    
    public void setPanel( String key, JPanel newPanel, WMSSpellBookPage scriptPage )
    {   
        spellBooks.get(key).setScriptPagePanel( newPanel, scriptPage );
    }
    
    public JPanel getPanel( String key, WMSSpellBookPage scriptPage )
    {
        return spellBooks.get(key).getScriptPagePanel( scriptPage );
    }
    
    public void setTitle( String key, String title, WMSSpellBookPage page )
    {
        spellBooks.get(key).setPageTitle( title, page );
    }
    
    public String getTitle( String key, WMSSpellBookPage page )
    {
        return spellBooks.get(key).getPageTitle(page);
    }
    
    public String getTitle( String key )
    {
        WMSSpellBook spellBook = spellBooks.get( key );
        return spellBook.getPageTitle( spellBook.getCurrentSpellBookPage() );
    }
   
    public JPanel getPanel(String key )
    {
        WMSSpellBook spellBook = spellBooks.get( key );
        return spellBook.getScriptPagePanel( spellBook.getCurrentSpellBookPage() );
    }
    
    public int getIndex( String key )
    {
        return spellBooks.get(key).getCurrentIndex();
    }
    
    public WMSSpellBookPage getCurrentPage( String key )
    {
        return spellBooks.get(key).getCurrentSpellBookPage();
    }
    
    public int getIndex( String key, WMSSpellBookPage page )
    {
        return spellBooks.get(key).getScriptIndex( page );
    }    
    
    public void next( String key )
    {
        spellBooks.get(key).next();
    }
    
    public void last( String key )
    {
        spellBooks.get(key).last();
    }    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        navPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new java.awt.GridLayout(1, 0));
        add(mainPanel, java.awt.BorderLayout.CENTER);

        navPanel.setBackground(new java.awt.Color(255, 255, 204));

        jButton1.setText("<--");

        nextButton.setText("-->");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");

        org.jdesktop.layout.GroupLayout navPanelLayout = new org.jdesktop.layout.GroupLayout(navPanel);
        navPanel.setLayout(navPanelLayout);
        navPanelLayout.setHorizontalGroup(
            navPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(navPanelLayout.createSequentialGroup()
                .add(212, 212, 212)
                .add(jButton1)
                .add(30, 30, 30)
                .add(nextButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton3)
                .addContainerGap())
        );
        navPanelLayout.setVerticalGroup(
            navPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(navPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(navPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nextButton)
                    .add(jButton1))
                .addContainerGap(18, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, navPanelLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .add(jButton3)
                .addContainerGap())
        );

        add(navPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
// TODO add your handling code here:
        
        WMSSpellBookPage page = spellBooks.get( currentSpellBookKey).next();
        if( page != null )
        {
            nextButton.setEnabled( true );
            mainPanel.removeAll();
            mainPanel.add( page.getPagePanel() );    
            cauldron.add( spellBooks.get( currentSpellBookKey).getSpells() );        
            mainPanel.invalidate();
            mainPanel.repaint();
        }
        else
        {
            nextButton.setEnabled( false );
        }
        
    }//GEN-LAST:event_nextButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel navPanel;
    private javax.swing.JButton nextButton;
    // End of variables declaration//GEN-END:variables
    
}
